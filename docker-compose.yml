services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: scheduleease_development
      POSTGRES_USER: scheduleease
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scheduleease"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgres://scheduleease:password@postgres:5432/scheduleease_development
      - REDIS_URL=redis://redis:6379/0
      - RAILS_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=scheduleease_development
      - DB_USERNAME=scheduleease
      - DB_PASSWORD=password
      - JWT_SECRET=your_jwt_secret_key_here_change_in_production
    volumes:
      - ./api:/app
      - api_bundle:/usr/local/bundle
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "bundle install && bundle exec puma config.ru -b tcp://0.0.0.0:3001"

  sidekiq:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      - DATABASE_URL=postgres://scheduleease:password@postgres:5432/scheduleease_development
      - REDIS_URL=redis://redis:6379/0
      - RAILS_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=scheduleease_development
      - DB_USERNAME=scheduleease
      - DB_PASSWORD=password
    volumes:
      - ./api:/app
      - api_bundle:/usr/local/bundle
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "bundle install && bundle exec sidekiq"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - api
    command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  redis_data:
  api_bundle:
  frontend_node_modules: 