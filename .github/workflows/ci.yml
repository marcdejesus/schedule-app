name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: scheduleease_test
          POSTGRES_USER: scheduleease
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    defaults:
      run:
        working-directory: ./api

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.3
        bundler-cache: true
        working-directory: ./api
    
    - name: Set up database
      env:
        DATABASE_URL: postgres://scheduleease:password@localhost:5432/scheduleease_test
        REDIS_URL: redis://localhost:6379/0
        RAILS_ENV: test
        DB_HOST: localhost
        DB_USERNAME: scheduleease
        DB_PASSWORD: password
        DB_PORT: 5432
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate
    
    - name: Run tests
      env:
        DATABASE_URL: postgres://scheduleease:password@localhost:5432/scheduleease_test
        REDIS_URL: redis://localhost:6379/0
        RAILS_ENV: test
        DB_HOST: localhost
        DB_USERNAME: scheduleease
        DB_PASSWORD: password
        DB_PORT: 5432
      run: bundle exec rspec
    
    - name: Run security audit
      run: |
        gem install bundler-audit
        bundle audit --update

  test-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test || echo "Tests not configured yet"
    
    - name: Build application
      run: npm run build

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.3
        bundler-cache: true
        working-directory: ./api
    
    - name: Run RuboCop
      working-directory: ./api
      run: bundle exec rubocop --auto-correct || true
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint 